version: '3.4'

services:
  postgres:
   container_name: postgresql
   environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgrespw
    - POSTGRES_DB=PostgresDb
   restart: always
   ports:
   - "5432:5432"
   volumes:
    - postgres_db:/var/lib/postgresql/data

  mongodb:
   container_name: mongodb
   environment:
    - MONGO_INITDB_ROOT_USERNAME=root
    - MONGO_INITDB_ROOT_PASSWORD=mongopw
    - MONGO_INITDB_DATABASE=MongoDb
   restart: always
   ports:
   - "27017:27017"
   volumes:
    - mongo_db:/data/db

  rabbitmq:
    container_name: rabbitmq
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
 
  auctionservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=postgres; User Id=postgres;Password=postgrespw; Database=auctions;
      - IdentityServiceUrl=http://identity-svc
      - RabbitMQ__Host=rabbitmq
    depends_on:
     - postgres
     - rabbitmq
    ports:
      - "7001:8080"
      - "7071:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  searchservices:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - RabbitMQ__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - "7002:8080"
      - "7072:8081"
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  gatewayservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ClientApp=https://app.carsties.local
      - VIRTUAL_HOST=api.carsties.local
    ports:
      - "6001:8080"
    depends_on:
      - searchservices
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro

  identityservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - IssuerUri=https://id.carsties.local
      - ClientApp=https://app.carsties.local
      - ConnectionStrings__DefaultConnection=Server=postgres; User Id=postgres; Password=postgrespw; Database=identity
      - VIRTUAL_HOST=id.carsties.local
    ports:
      - "5001:8080"
    depends_on:
      - postgres
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
